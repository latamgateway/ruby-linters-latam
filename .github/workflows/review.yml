name: Review

on:
  workflow_call:

jobs:
  pronto:
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout latamgateway/ruby-linters-latam
        uses: actions/checkout@v3
        with:
          repository: latamgateway/ruby-linters-latam
          ref: review
          path: latamgateway/ruby-linters-latam

      - name: Install Pronto
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.0"
          working-directory: latamgateway/ruby-linters-latam/linters/pronto
          bundler-cache: true

      - name: Install yamllint
        run: |
          sudo apt-get update --quiet
          sudo apt-get install --yes --quiet yamllint

      - name: Checkout ${{ github.repository }}
        uses: actions/checkout@v3
        with:
          path: ${{ github.repository }}
          fetch-depth: 0

      - name: Setup configuration
        working-directory: ${{ github.repository }}
        run: |
          cp -r ${{ github.workspace }}/latamgateway/ruby-linters-latam/config/rubocop .
          cp ${{ github.workspace }}/latamgateway/ruby-linters-latam/config/.pronto.yml .
          cp ${{ github.workspace }}/latamgateway/ruby-linters-latam/config/.rubocop.yml .
          cp ${{ github.workspace }}/latamgateway/ruby-linters-latam/config/.erb-lint.yml .
          cp ${{ github.workspace }}/latamgateway/ruby-linters-latam/config/.yamllint.yml .
          cp ${{ github.workspace }}/latamgateway/ruby-linters-latam/config/.fasterer.yml .
          cp ${{ github.workspace }}/latamgateway/ruby-linters-latam/linters/eslint/package.json .
          cp ${{ github.workspace }}/latamgateway/ruby-linters-latam/linters/eslint/package-lock.json .
          cp ${{ github.workspace }}/latamgateway/ruby-linters-latam/config/.eslintrc.yml .

      - uses: actions/setup-node@v3
        with:
          cache: npm
          cache-dependency-path: ${{ github.repository }}/package-lock.json

      - name: Install eslint
        working-directory: ${{ github.repository }}
        run: |
          npm install eslint --global
          npm ci

      - name: Pronto
        env:
          BUNDLE_GEMFILE: ${{ github.workspace }}/latamgateway/ruby-linters-latam/linters/pronto/Gemfile
        working-directory: ${{ github.repository }}
        run: |
          bundle exec pronto run \
            --exit-code \
            --commit=origin/${{ github.base_ref }}

  semgrep:
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout latamgateway/ruby-linters-latam
        uses: actions/checkout@v3
        with:
          repository: latamgateway/ruby-linters-latam
          ref: review
          path: latamgateway/ruby-linters-latam

      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: pip

      - name: Install
        working-directory: latamgateway/ruby-linters-latam/linters/semgrep
        run: pip install -r requirements.txt

      - name: Checkout ${{ github.repository }}
        uses: actions/checkout@v3
        with:
          path: ${{ github.repository }}
          fetch-depth: 0

      - name: Semgrep
        working-directory: ${{ github.repository }}
        run: |
          semgrep ci \
            --config=${{ github.workspace }}/latamgateway/ruby-linters-latam/config/semgrep \
            --baseline-commit=origin/${{ github.base_ref }}
